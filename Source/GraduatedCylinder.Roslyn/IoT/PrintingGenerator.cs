using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp.Syntax;

namespace GraduatedCylinder.Roslyn.IoT;

[Generator]
public class PrintingGenerator : BaseGenerator
{

    public PrintingGenerator()
        : base("GraduatedCylinder.IoT") { }

    protected override void ExecuteInternal(GeneratorExecutionContext context) {
        if (context.SyntaxReceiver is not DimensionReceiver receiver) {
            return;
        }
        //Debugger.Launch();

        string filename = "Source\\GraduatedCylinder.IoT.Text\\PrintExtensions.g.cs";

        if (!SetExternalGenerationPath(context)) {
            return;
        }

        WriteAutoGeneratedNotification();

        Buffer.AppendLine("namespace GraduatedCylinder.IoT.Text");
        Buffer.AppendLine("{");
        Buffer.AppendLine("\tpublic static partial class PrintExtensions");
        Buffer.AppendLine("\t{");

        foreach (StructDeclarationSyntax @struct in receiver.GetDimensions(context.Compilation)) {
            Log($"Generating for {@struct.Identifier}");
            NameSet names = NameSet.FromDimensionType(@struct.Identifier.ToString());

            Buffer.AppendLine();
            Buffer.AppendLine(
                $"\t\tpublic static string Print(this {names.DimensionTypeName} value, {names.UnitsTypeName} units = {names.UnitsTypeName}.Unspecified, int precision = 4) {{");
            Buffer.AppendLine($"\t\t\t{names.DimensionTypeName} inUnits = value.In(units);");
            Buffer.AppendLine(
                "\t\t\treturn string.Format(GetPrecisionFormat(precision), inUnits.Value, inUnits.Units.GetAbbreviation());");
            Buffer.AppendLine("\t\t}");
            Buffer.AppendLine();
            Buffer.AppendLine($"\t\tpublic static string Print(this {names.DimensionTypeName} value, UnitPreferences preferences) {{");
            Buffer.AppendLine($"\t\t\treturn Print(value, preferences.{names.UnitsTypeName}, preferences.Precision);");
            Buffer.AppendLine("\t\t}");

        }

        Buffer.AppendLine("\t}");
        Buffer.AppendLine("}");

        //don't add to the IoT.dll
        BufferToGeneratedFile(filename).SaveToDisk();
    }

    protected override void InitializeInternal(GeneratorInitializationContext context) {
        context.RegisterForSyntaxNotifications(() => new DimensionReceiver());
    }

}